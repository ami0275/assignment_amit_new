apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'

kapt {
    correctErrorTypes = true
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion Integer.parseInt(project.APP_COMPILE_SDK_VERSION)
    buildToolsVersion project.APP_BUILD_TOOL_VERSION

    defaultConfig {
        applicationId "com.moviebag.unofficial"
        minSdkVersion Integer.parseInt(project.MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK_VERSION)
        versionCode Integer.parseInt(project.APP_VERSION_CODE)
        versionName project.APP_VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", "MovieBag-$versionName")
    }

    defaultConfig {
        buildConfigField 'String', 'API_URL', keystoreProperties['API_URL']
        buildConfigField 'String', 'API_KEY', keystoreProperties['API_KEY']
    }

    signingConfigs  {
        release {
        }
    }

    buildTypes {
        release {
            // shrinkResources true
            // minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    /*Dagger*/
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerAndroid"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerAndroid"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerAndroid"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerAndroid"

    /*Retrofit*/
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitAdapter"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okHttVersion"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    /*Rx*/
    implementation "io.reactivex.rxjava2:rxkotlin:$rootProject.rxKotlin"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroid"
    implementation "com.jakewharton.rxbinding3:rxbinding:$rootProject.rxBinding"
    implementation "com.jakewharton.rxbinding3:rxbinding-core:$rootProject.rxBinding"
    implementation "com.jakewharton.rxbinding3:rxbinding-appcompat:$rootProject.rxBinding"

    /*Debug Tools*/
    implementation "com.facebook.stetho:stetho-okhttp3:$rootProject.stetho"
    implementation "com.facebook.stetho:stetho:$rootProject.stetho"
    debugImplementation "com.readystatesoftware.chuck:library:$rootProject.chuck"
    releaseImplementation "com.readystatesoftware.chuck:library-no-op:$rootProject.chuck"

    /*Views*/
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.contrainstLayout"
    implementation "androidx.cardview:cardview:$rootProject.cardView"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerView"
    implementation "com.google.android.material:material:$rootProject.material"
    implementation "androidx.appcompat:appcompat:$rootProject.material"

    /*Materila dialogs*/
    implementation "com.afollestad.material-dialogs:core:$rootProject.materialDialogs"
    implementation "com.afollestad.material-dialogs:input:$rootProject.materialDialogs"
    implementation "com.airbnb.android:lottie:$rootProject.lottie"
    implementation "androidx.paging:paging-runtime:$rootProject.paging"

    /*LiveData and ViewModels*/
    implementation "androidx.lifecycle:lifecycle-viewmodel:$rootProject.viewModel"
    implementation "androidx.lifecycle:lifecycle-livedata:$rootProject.viewModel"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.viewModel"
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.viewModel"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$rootProject.viewModel"
    implementation "androidx.core:core-ktx:$rootProject.coreKtx"
    implementation "androidx.legacy:legacy-support-v4:$rootProject.legacySupport"

    /*Image*/
    implementation "com.github.bumptech.glide:glide:$rootProject.glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glide"

    /*Fragment*/
    implementation "androidx.navigation:navigation-fragment:$rootProject.navigation"
    implementation "androidx.navigation:navigation-ui:$rootProject.navigation"
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigation"

    // Test
    testImplementation "junit:junit:$rootProject.testJunit"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.extJunit"
    testImplementation "io.mockk:mockk:$rootProject.mock"
    testImplementation "androidx.arch.core:core-testing:$rootProject.coreTesting"
    testImplementation "com.google.truth:truth:$rootProject.truth"
}